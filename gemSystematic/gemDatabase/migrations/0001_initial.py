# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-10-25 21:49
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'currencies',
            },
        ),
        migrations.CreateModel(
            name='CurrencyPair',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=200)),
                ('pip_size', models.DecimalField(decimal_places=8, max_digits=11)),
                ('base_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='base_currency', to='gemDatabase.Currency')),
                ('quoted_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quoted_currency', to='gemDatabase.Currency')),
            ],
            options={
                'db_table': 'currency_pairs',
            },
        ),
        migrations.CreateModel(
            name='DataPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('value', models.DecimalField(decimal_places=10, max_digits=30)),
            ],
            options={
                'db_table': 'data_points',
            },
        ),
        migrations.CreateModel(
            name='DataPointSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'data_point_sources',
            },
        ),
        migrations.CreateModel(
            name='DataPointType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'data_point_types',
            },
        ),
        migrations.CreateModel(
            name='Exchange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'exchanges',
            },
        ),
        migrations.CreateModel(
            name='Future',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=200)),
                ('bloomberg_code', models.CharField(max_length=20)),
                ('minimum_tick_size', models.DecimalField(decimal_places=5, max_digits=9)),
                ('contract_size', models.IntegerField()),
                ('point_value', models.DecimalField(decimal_places=2, max_digits=9)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gemDatabase.Currency')),
                ('exchange', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gemDatabase.Exchange')),
            ],
            options={
                'db_table': 'futures',
            },
        ),
        migrations.CreateModel(
            name='FutureContract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_trade_date', models.DateField()),
                ('last_trade_date', models.DateField()),
                ('year', models.IntegerField()),
                ('future', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gemDatabase.Future')),
            ],
            options={
                'db_table': 'future_contracts',
            },
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'instruments',
            },
        ),
        migrations.CreateModel(
            name='InstrumentFamily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=200)),
                ('future', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gemDatabase.Future')),
            ],
            options={
                'db_table': 'instrument_families',
            },
        ),
        migrations.CreateModel(
            name='InstrumentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'instrument_types',
            },
        ),
        migrations.CreateModel(
            name='Month',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=200)),
                ('month_code', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'months',
            },
        ),
        migrations.CreateModel(
            name='SettlementType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'settlement_types',
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=200)),
                ('bloomberg_code', models.CharField(max_length=20)),
                ('company', models.CharField(max_length=200)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gemDatabase.Currency')),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gemDatabase.Instrument')),
            ],
            options={
                'db_table': 'stocks',
            },
        ),
        migrations.AddField(
            model_name='instrumentfamily',
            name='stock',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gemDatabase.Stock'),
        ),
        migrations.AddField(
            model_name='instrument',
            name='instrument_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gemDatabase.InstrumentType'),
        ),
        migrations.AddField(
            model_name='futurecontract',
            name='instrument',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gemDatabase.Instrument'),
        ),
        migrations.AddField(
            model_name='futurecontract',
            name='month',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gemDatabase.Month'),
        ),
        migrations.AddField(
            model_name='future',
            name='settlement_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gemDatabase.SettlementType'),
        ),
        migrations.AddField(
            model_name='datapoint',
            name='data_point_source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gemDatabase.DataPointSource'),
        ),
        migrations.AddField(
            model_name='datapoint',
            name='data_point_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gemDatabase.DataPointType'),
        ),
        migrations.AddField(
            model_name='datapoint',
            name='instrument',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gemDatabase.Instrument'),
        ),
    ]
